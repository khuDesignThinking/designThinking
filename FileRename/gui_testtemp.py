# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'New_Gui.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
import countBlink
import time
import source
from threading import Thread
import GUI_graph
import control_brightness as bright
photo1="resource/image/profile.png"
photo2="resource/image/profile2.png"
phototemp=""

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(310, 232)
        MainWindow.setMaximumSize(QtCore.QSize(310, 232))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(10, 10, 291, 211))
        self.widget.setObjectName("widget")
        self.gridLayout = QtWidgets.QGridLayout(self.widget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.start_btn = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.start_btn.sizePolicy().hasHeightForWidth())
        self.start_btn.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("한컴 백제 B")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.start_btn.setFont(font)
        self.start_btn.setObjectName("start_btn")
        self.gridLayout.addWidget(self.start_btn, 0, 1, 2, 1)
        self.gender = QtWidgets.QComboBox(self.widget)
        font = QtGui.QFont()
        font.setFamily("한컴 백제 M")
        font.setPointSize(10)
        self.gender.setFont(font)
        self.gender.setObjectName("gender")
        self.gender.addItem("")
        self.gender.addItem("")
        self.gridLayout.addWidget(self.gender, 0, 0, 1, 1)
        self.age = QtWidgets.QComboBox(self.widget)
        font = QtGui.QFont()
        font.setFamily("한컴 백제 M")
        font.setPointSize(10)
        self.age.setFont(font)
        self.age.setObjectName("age")
        self.age.addItem("")
        self.age.addItem("")
        self.gridLayout.addWidget(self.age, 1, 0, 1, 1)
        self.widget_4 = QtWidgets.QWidget(self.widget)
        self.widget_4.setObjectName("widget_4")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.widget_4)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.brightness_check = QtWidgets.QCheckBox(self.widget_4)
        self.brightness_check.setObjectName("brightness_check")
        self.gridLayout_4.addWidget(self.brightness_check, 0, 0, 1, 1)
        self.Audio_check = QtWidgets.QCheckBox(self.widget_4)
        self.Audio_check.setObjectName("Audio_check")
        self.gridLayout_4.addWidget(self.Audio_check, 1, 0, 1, 1)
        self.graphic_hide = QtWidgets.QPushButton(self.widget_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.graphic_hide.sizePolicy().hasHeightForWidth())
        self.graphic_hide.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("한컴 백제 B")
        font.setPointSize(12)
        self.graphic_hide.setFont(font)
        self.graphic_hide.setObjectName("graphic_hide")
        self.gridLayout_4.addWidget(self.graphic_hide, 0, 1, 1, 1)
        self.graphic_show = QtWidgets.QPushButton(self.widget_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.graphic_show.sizePolicy().hasHeightForWidth())
        self.graphic_show.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("한컴 백제 B")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.graphic_show.setFont(font)
        self.graphic_show.setObjectName("graphic_show")
        self.gridLayout_4.addWidget(self.graphic_show, 1, 1, 1, 1)
        self.Eye_manual = QtWidgets.QPushButton(self.widget_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Eye_manual.sizePolicy().hasHeightForWidth())
        self.Eye_manual.setSizePolicy(sizePolicy)
        self.Eye_manual.setObjectName("Eye_manual")
        self.gridLayout_4.addWidget(self.Eye_manual, 2, 0, 1, 2)
        self.gridLayout.addWidget(self.widget_4, 3, 0, 1, 2)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.action = QtWidgets.QAction(MainWindow)
        self.action.setObjectName("action")

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.start_btn.setText(_translate("MainWindow", "측정 시작"))
        self.gender.setItemText(0, _translate("MainWindow", "여성"))
        self.gender.setItemText(1, _translate("MainWindow", "남성"))
        self.age.setItemText(0, _translate("MainWindow", "청소년"))
        self.age.setItemText(1, _translate("MainWindow", "성인"))
        self.brightness_check.setText(_translate("MainWindow", "화면 밝기 자동 조절"))
        self.Audio_check.setText(_translate("MainWindow", "음성 알리미 키기"))
        self.graphic_hide.setText(_translate("MainWindow", "그래프 숨기기"))
        self.graphic_show.setText(_translate("MainWindow", "그래프 나타내기"))
        self.Eye_manual.setText(_translate("MainWindow", "눈 건강 매뉴얼"))
        self.action.setText(_translate("MainWindow", "그래프"))


        self.dialog = QDialog()
        
        self.start_btn.clicked.connect(self.ready_start)
        self.start_btn.clicked.connect(self.select_g)
        self.start_btn.clicked.connect(self.select_a)
        self.start_btn.clicked.connect(self.db_starter)
        self.start_btn.clicked.connect(self.us_starter)
        self.start_btn.clicked.connect(self.gp_starter)
        self.start_btn.clicked.connect(self.gp_updater)
        self.start_btn.clicked.connect(self.dialog_open)
        self.start_btn.clicked.connect(self.d_su_starter)

        self.graphic_hide.clicked.connect(lambda: self.hide_graphic(MainWindow))
        self.graphic_show.clicked.connect(lambda: self.show_graphic(MainWindow))

    def ready_start(self):
        countBlink.exit_condition = False
        time.sleep(0.1)

    def show_graphic(self, MainWindow):
        self.graphic_hide.setEnabled(True)
        self.graphic_show.setEnabled(False)
        self.widget.show()
        self.centralwidget.setFixedSize(738, 852)
        MainWindow.setFixedSize(738, 872)

    def hide_graphic(self, MainWindow):
        self.graphic_hide.setEnabled(False)
        self.graphic_show.setEnabled(True)
        self.widget.hide()
        self.centralwidget.setFixedSize(738, 408)
        MainWindow.setFixedSize(738, 428)

    def dialog_open(self):
        self.hide()
        self.dialog.setWindowTitle('Dialog')
        self.dialog.setWindowModality(Qt.ApplicationModal)
        self.dialog.resize(363, 232)

        ag = QDesktopWidget().availableGeometry()
        sg = QDesktopWidget().screenGeometry()
        widget = self.dialog.geometry()
        x = ag.width() - widget.width()
        y = 2 * ag.height() - sg.height() - widget.height()
        self.dialog.move(x, y)

        self.labDialog = QtWidgets.QLabel(self.dialog)
        self.labDialog.setGeometry(10, 10, 341, 141)
        self.labDialog.setText("")
        self.labDialog.setObjectName("labDialog")
        self.labDialog.setAlignment(QtCore.Qt.AlignCenter)

        self.btnDialog = QtWidgets.QPushButton("측정 종료", self.dialog)
        self.btnDialog.setGeometry(110, 180, 151, 41)
        self.btnDialog.setObjectName("btnDialog")
        self.btnDialog.clicked.connect(self.dialog_close)

        self.dialog.show()

    def dialog_close(self):
        countBlink.exit_condition = True
        Thread2.vid.stopVideo()
        self.dialog.close()
        self.show()

    def dialog_status_update(self):
        while(not countBlink.exit_condition):
            time.sleep(10)
            cnt_blink = countBlink.cnt_blink
            if (self.gender.currentText() == "남성" or self.age.currentText() == "청소년"):
                if(cnt_blink <=1):
                    self.labDialog.setPixmap(QtGui.QPixmap("resource/image/bad.png"))
                elif(1 < cnt_blink <=3):
                    self.labDialog.setPixmap(QtGui.QPixmap("resource/image/Soso.png"))
                elif(cnt_blink >3):
                    self.labDialog.setPixmap(QtGui.QPixmap("resource/image/Good.png"))
            else:
                if(cnt_blink <=2):
                    self.labDialog.setPixmap(QtGui.QPixmap("resource/image/bad.png"))
                elif(2 < cnt_blink <=5):
                    self.labDialog.setPixmap(QtGui.QPixmap("resource/image/Soso.png"))
                elif(cnt_blink >5):
                    self.labDialog.setPixmap(QtGui.QPixmap("resource/image/Good.png"))

    def d_su_starter(self):
        d_x = Thread(target = self.dialog_status_update, args=())
        d_x.start()

    def db_starter(self):
        x = Thread1(self)
        x.start()
    def us_starter(self):
        y = Thread(target = self.update_status, args=())
        y.start()
    def gp_starter(self):
        z = Thread2(self)
        z.start()
    def gp_updater(self):
        w = Thread(target = self.update_gp, args=())
        w.start()

    def bright_contrl(self):
        if self.brightness_check.isChecked():
            bright.update_bright(path = "dataset/count_blink.csv")
        else:
            pass


    def select_g(self):
        global gender
        gender=self.gender.currentText()
        print(self.gender.currentText())
    
    def select_a(self):
        global age
        age=self.age.currentText()
        print(self.age.currentText())
        
    def update_status(self):
        while(not countBlink.exit_condition):
            time.sleep(10)
            self.bright_contrl()
            cnt_blink = countBlink.cnt_blink
            if (self.gender.currentText() == "남성"):
                if(cnt_blink <=1):
                    self.label_3.setPixmap(QtGui.QPixmap("resource/image/bad.png"))
                elif(1 < cnt_blink <=3):
                    self.label_3.setPixmap(QtGui.QPixmap("resource/image/Soso.png"))
                elif(cnt_blink >3):
                    self.label_3.setPixmap(QtGui.QPixmap("resource/image/Good.png"))
            else:
                if(cnt_blink <=2):
                    self.label_3.setPixmap(QtGui.QPixmap("resource/image/bad.png"))
                elif(2 < cnt_blink <=5):
                    self.label_3.setPixmap(QtGui.QPixmap("resource/image/Soso.png"))
                elif(cnt_blink >5):
                    self.label_3.setPixmap(QtGui.QPixmap("resource/image/Good.png"))

    def update_gp(self):
        while(not countBlink.exit_condition):
            time.sleep(10)
            self.graphicsView.setPixmap(QtGui.QPixmap("dataset/graph.jpg"))

import source


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
